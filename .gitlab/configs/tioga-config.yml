# Copyright (c) 2010-2024, Lawrence Livermore National Security, LLC. Produced
# at the Lawrence Livermore National Laboratory. All Rights reserved. See files
# LICENSE and NOTICE for details. LLNL-CODE-806117.
#
# This file is part of the MFEM library. For more information and source code
# availability visit https://mfem.org.
#
# MFEM is free software; you can redistribute it and/or modify it under the
# terms of the BSD-3 license. We welcome feedback and contributions, see file
# CONTRIBUTING.md for details.

# GitLab pipeline configuration for the Corona machine at LLNL
variables:
  MACHINE_NAME: tioga

.on_tioga:
  tags:
    - shell
    - tioga
  rules:
    # Don't run tioga jobs if...
    - if: '$CI_COMMIT_BRANCH =~ /_tnone/ || $ON_TIOGA == "OFF"'
      when: never
    # Don't run autotest update if...
    - if: '$CI_JOB_NAME =~ /report/ && $AUTOTEST != "YES"'
      when: never
    # Report success on success status
    - if: '$CI_JOB_NAME =~ /report_job_success/ && $AUTOTEST == "YES"'
      when: on_success
    # Report failure on failure status
    - if: '$CI_JOB_NAME =~ /report_job_failure/ && $AUTOTEST == "YES"'
      when: on_failure
    # Always release resource
    - if: '$CI_JOB_NAME =~ /release_resource/'
      when: always
    # Always cleanup
    - if: '$CI_JOB_NAME =~ /cleanup/'
      when: always
    # Default is to run if previous stage succeeded
    - when: on_success

# Spack helped builds
# Generic tioga build job, extending build script
.build_and_test_on_tioga:
  extends: [.on_tioga]
  stage: build_and_test
  script:
    # THREADS is used by 'tests/gitlab/build_and_test', run below
    - export THREADS=12
    - ALLOC_ID=$(flux jobs --name="${ALLOC_NAME}" -n -o "{id}")
    - |
      echo -e "[Information]: Shared allocation name = ${ALLOC_NAME}"
      echo -e "[Information]: Shared allocation ID = ${ALLOC_ID}"
      echo -e "[Information]: Data directory used = ${MFEM_DATA_DIR}"
      echo -e "[Information]: Spec to build and test = ${SPEC}"
    - PROXY="$( [[ -n "${ALLOC_ID}" ]] && echo "flux proxy ${ALLOC_ID}" || echo "" )"
    - ${PROXY} flux watch $( ${PROXY} flux batch -o output.stdout.type=kvs --nodes=1 --begin-time=+5s tests/gitlab/build_and_test --spec "${SPEC}" --data-dir "${MFEM_DATA_DIR}" --data)
